This section contains the Solution to Problem using Segment Tree and Sparse Table.
1.Maximize_Bitwise_Function.cpp Simple Problem that can only be solved through Sparse Table in Time constraint. Wrote log fn that computes log in O(1).
2.Prefix_sum_queries.cpp This is intresting question with range update and range maximum , we solved it with one segment tree , the main idea is to traverse the tree from u to down and while moving down you push the updates to both the child. The Question is that we are provided with an array and also can be given a point update , or query in form of (l,r) where we have to output maximum prefix sum in that range starting from l.
3.Sorted_Sum.cpp , Well the question is very intresting , but while coming up with the solution i discovered one of the alternate way to count inversions using segment tree,
so , how to do it? So what we first do is to sort the given data and find maintain the map of its intial index to final index in when the data gets sorted. Now build the segment tree of range sum and point update. Now , what you do is start traversing the original array from reverse and do a point update with value 1 int the segment tree corresponding to its index in sorted array. No to find inversion for jth element we want to know how many element before it are less than it. So , using its index int sorted array do a range query on it. 
